-- =============================================
-- Author:		NTGIANG 14.10.2014
-- Create date: 14.10.2014
-- Description:	Báo cáo Tổng hợp công nợ phải trả
-- nvtoan modify 17/01/2015: Sửa lỗi không lấy cặp định khoản chênh lệch giá
-- nvtoan modify 28/01/2014: Khi chọn tất cả tài khoản thì chỉ lấy tài khoản chi tiết nhất
-- tthoa edit 6/2/2015 phục vụ drilldown
-- nmtruong 13/4/2015: thêm having
-- NVTOAN modify 21/10/2015: Lấy bổ sung cột số nợ tối đa
-- BTAnh 06/01/2016: Lấy địa chỉ, mã số thuế của đối tượng trong danh mục, không lấy trên sổ
-- =============================================
    CREATE
    PROCEDURE [dbo].[Proc_Tong_Hop_Cong_No_Phai_Tra] @FromDate DATETIME,
    @ToDate DATETIME,
    @CompanyID UNIQUEIDENTIFIER,-- Chi nhánh
    @AccountNumber NVARCHAR(20),-- Số tài khoản
    @AccountObjectID AS NVARCHAR(MAX), -- Danh sách mã nhà cung cấp
    @CurrencyID NVARCHAR(3),-- Loại tiền
    @CurrentBook NVARCHAR(3),--  Có dùng sổ quản trị hay không?
    @isDependent BIT = 0
    AS
    BEGIN
        --         DECLARE @tblBrandIDList TABLE
--                                 (
--                                     BranchID UNIQUEIDENTIFIER
--                                 )

        --         INSERT  INTO @tblBrandIDList
--                 SELECT  FGDBBI.BranchID
--                 FROM    dbo.Func_GetDependentByBranchID(@BranchID,
--                                                         @IncludeDependentBranch)
--                         AS FGDBBI

        DECLARE @tblListAccountObjectID TABLE -- Bảng chứa danh sách các NCC
                                        (
                                            AccountObjectID            UNIQUEIDENTIFIER,
                                            AccountObjectCode          NVARCHAR(25),
                                            AccountObjectName          NVARCHAR(255),
                                            AccountObjectAddress       NVARCHAR(255),
                                            AccountObjectTaxCode       NVARCHAR(200),
                                            AccountObjectGroupListCode NVARCHAR(MAX),
                                            AccountObjectCategoryName  NVARCHAR(MAX)
--               ,MaximizeDebtAmount DECIMAL(18, 4)
                                        )
        INSERT INTO @tblListAccountObjectID
        SELECT AO.id,
               AO.AccountingObjectCode,
               AO.AccountingObjectName,
               AO.AccountingObjectAddress,
               AO.TaxCode,
               null AccountingObjectGroupCode,
               null AccountingObjectGroupName
        FROM dbo.Func_ConvertStringIntoTable_Nvarchar(@AccountObjectID, ',') tblAccountObjectSelected
                 INNER JOIN dbo.AccountingObject AO ON AO.ID = tblAccountObjectSelected.Value

        --         DECLARE @StartDateOfPeriod DATETIME
--         SET @StartDateOfPeriod = '1/1/' + CAST(Year(@FromDate) AS NVARCHAR(5))

        --Kết quả cần lấy
        --AccountObjectID UNIQUEIDENTIFIER ,
        --AccountObjectCode NVARCHAR(100) ,   -- Mã NCC
        --AccountObjectName NVARCHAR(255) ,	-- Tên NCC
        --AccountObjectAddress NVARCHAR(255) , -- Địa chỉ
        --AccountObjectTaxCode NVARCHAR(50) , -- Mã số thuế
        --AccountNumber NVARCHAR(20) , -- Số tài khoản
        --AccountCategoryKind INT , -- Tính chất tài khoản
        --OpenningDebitAmountOC MONEY ,	-- Dư nợ Đầu kỳ
        --OpenningDebitAmount MONEY , -- Dư nợ Đầu kỳ quy đổi
        --OpenningCreditAmountOC MONEY , -- Dư có đầu kỳ
        --OpenningCreditAmount MONEY , -- Dư có đầu kỳ quy đổi
        --DebitAmountOC MONEY ,	-- Phát sinh nợ
        --DebitAmount MONEY , -- Phát sinh nợ quy đổi
        --CreditAmountOC MONEY , -- Phát sinh có
        --CreditAmount MONEY , -- Phát sinh có quy đổi
        --CloseDebitAmountOC MONEY , --Dư Nợ cuối kỳ
        --CloseDebitAmount MONEY , --Dư Nợ cuối kỳ Quy đổi
        --CloseCreditAmountOC MONEY ,	--Dư Có cuối kỳ
        --CloseCreditAmount MONEY , --Dư Có cuối kỳ quy đổi
        --AccountObjectGroupListCode NVARCHAR(MAX) , -- Mã nhóm NCC
        --AccountObjectCategoryName NVARCHAR(MAX) -- Tên nhóm NCC

        -- Bảng chứa số tài khoản
        DECLARE @tblAccountNumber TABLE
                                  (
                                      AccountNumber        NVARCHAR(20) PRIMARY KEY,
                                      AccountName          NVARCHAR(255),
                                      AccountNumberPercent NVARCHAR(25),
                                      AccountCategoryKind  INT
                                  )
        IF @AccountNumber IS NOT NULL
            BEGIN
                INSERT INTO @tblAccountNumber
                select b.AccountNumber,
                       b.AccountName,
                       b.AccountNumberPercent,
                       b.AccountGroupKind
                from (
                         SELECT ROW_NUMBER() OVER (PARTITION BY A.AccountNumber order by A.AccountNumber asc) rn,
                                A.AccountNumber AccountNumber,
                                A.AccountName AccountName,
                                A.AccountNumber + '%' as AccountNumberPercent,
                                A.AccountGroupKind AccountGroupKind
                         FROM dbo.AccountList AS A
                         WHERE A.AccountNumber = @AccountNumber
                           and CompanyID in (select id from Func_getCompany(@CompanyID, @isDependent))
                     ) b
                where b.rn = 1
                ORDER BY b.AccountNumber, b.AccountName
            END
        ELSE
            BEGIN
                INSERT INTO @tblAccountNumber
                 select b.AccountNumber,
                       b.AccountName,
                       b.AccountNumberPercent,
                       b.AccountGroupKind
                from (SELECT ROW_NUMBER() OVER (PARTITION BY A.AccountNumber order by A.AccountNumber asc) rn,
                             A.AccountNumber AccountNumber,
                             A.AccountName AccountName,
                             A.AccountNumber + '%' as AccountNumberPercent,
                             A.AccountGroupKind AccountGroupKind
                      FROM dbo.AccountList AS A
                      WHERE DetailByAccountObject = 1
                        AND AccountingType = 0
                        AND IsParentNode = 0
                        and CompanyID in (select id from Func_getCompany(@CompanyID, @isDependent))
                     ) b where b.rn = 1
                ORDER BY b.AccountNumber,
                         b.AccountName
            END

        SELECT ROW_NUMBER() OVER ( ORDER BY AccountObjectCode ) AS RowNum,
               AccountingObjectID,
               AccountObjectCode,                                                         -- Mã NCC
               AccountObjectName,                                                         -- Tên NCC
               AccountObjectAddress,                                                      -- Địa chỉ
               AccountObjectTaxCode,
--                 MaximizeDebtAmount ,
               AccountNumber,                                                             -- Số tài khoản
               AccountCategoryKind,                                                       -- Tính chất tài khoản
               (CASE
                    WHEN AccountCategoryKind = 0
                        THEN SUM(OpenningDebitAmountOC)
                        - SUM(OpenningCreditAmountOC)
                    WHEN AccountCategoryKind = 1 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningDebitAmountOC
                                 - OpenningCreditAmountOC)) > 0
                                 THEN (SUM(OpenningDebitAmountOC
                                 - OpenningCreditAmountOC))
                             ELSE $0
                        END
                   END)                                         AS openingDebitAmountOC,  -- Dư nợ Đầu kỳ
               (CASE
                    WHEN AccountCategoryKind = 0
                        THEN (SUM(OpenningDebitAmount - OpenningCreditAmount))
                    WHEN AccountCategoryKind = 1 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningDebitAmount
                                 - OpenningCreditAmount)) > 0
                                 THEN SUM(OpenningDebitAmount
                                 - OpenningCreditAmount)
                             ELSE $0
                        END
                   END)                                         AS openingDebitAmount,    -- Dư nợ Đầu kỳ quy đổi
               (CASE
                    WHEN AccountCategoryKind = 1
                        THEN (SUM(OpenningCreditAmountOC
                        - OpenningDebitAmountOC))
                    WHEN AccountCategoryKind = 0 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningCreditAmountOC
                                 - OpenningDebitAmountOC)) > 0
                                 THEN (SUM(OpenningCreditAmountOC
                                 - OpenningDebitAmountOC))
                             ELSE $0
                        END
                   END)                                         AS openingCreditAmountOC, -- Dư có đầu kỳ
               (CASE
                    WHEN AccountCategoryKind = 1
                        THEN (SUM(OpenningCreditAmount - OpenningDebitAmount))
                    WHEN AccountCategoryKind = 0 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningCreditAmount
                                 - OpenningDebitAmount)) > 0
                                 THEN (SUM(OpenningCreditAmount
                                 - OpenningDebitAmount))
                             ELSE $0
                        END
                   END)                                         AS openingCreditAmount,   -- Dư có đầu kỳ quy đổi
               SUM(DebitAmountOC)                               AS debitAmountOC,         -- Phát sinh nợ
               SUM(DebitAmount)                                 AS debitAmount,           -- Phát sinh nợ quy đổi
               SUM(CreditAmountOC)                              AS creditAmountOC,        -- Phát sinh có
               SUM(CreditAmount)                                AS creditAmount,          -- Phát sinh có quy đổi
               SUM(AccumDebitAmountOC)                          AS AccumDebitAmountOC,    -- Lũy kế Phát sinh nợ
               SUM(AccumDebitAmount)                            AS AccumDebitAmount,      -- Lũy kế Phát sinh nợ quy đổi
               SUM(AccumCreditAmountOC)                         AS AccumCreditAmountOC,   -- Lũy kế Phát sinh có
               SUM(AccumCreditAmount)                           AS AccumCreditAmount,     -- Lũy kế Phát sinh có quy đổi
            /* Số dư cuối kỳ = Dư Có đầu kỳ - Dư Nợ đầu kỳ + Phát sinh Có – Phát sinh Nợ
            Nếu Số dư cuối kỳ >0 thì hiển bên cột Dư Có cuối kỳ
            Nếu số dư cuối kỳ <0 thì hiển thị bên cột Dư Nợ cuối kỳ */
               (CASE
                    WHEN AccountCategoryKind = 0
                        THEN SUM(OpenningDebitAmountOC - OpenningCreditAmountOC
                                     + DebitAmountOC - CreditAmountOC)
                    WHEN AccountCategoryKind = 1 THEN $0
                    ELSE CASE
                             WHEN SUM(OpenningCreditAmountOC
                                          - OpenningDebitAmountOC
                                          + CreditAmountOC - DebitAmountOC) > 0
                                 THEN $0
                             ELSE SUM(OpenningDebitAmountOC
                                          - OpenningCreditAmountOC
                                          + DebitAmountOC - CreditAmountOC)
                        END
                   END)                                         AS CloseDebitAmountOC,    -- Dư nợ cuối kỳ
               (CASE
                    WHEN AccountCategoryKind = 1
                        THEN SUM(OpenningCreditAmountOC - OpenningDebitAmountOC
                                     + CreditAmountOC - DebitAmountOC)
                    WHEN AccountCategoryKind = 0 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningCreditAmountOC
                                           - OpenningDebitAmountOC
                                           + CreditAmountOC - DebitAmountOC)) > 0
                                 THEN SUM(OpenningCreditAmountOC
                                              - OpenningDebitAmountOC
                                              + CreditAmountOC - DebitAmountOC)
                             ELSE $0
                        END
                   END)                                         AS CloseCreditAmountOC,   -- Dư có cuối kỳ
               (CASE
                    WHEN AccountCategoryKind = 0
                        THEN SUM(OpenningDebitAmount - OpenningCreditAmount
                                     + DebitAmount - CreditAmount)
                    WHEN AccountCategoryKind = 1 THEN $0
                    ELSE CASE
                             WHEN SUM(OpenningCreditAmount
                                          - OpenningDebitAmount + CreditAmount
                                 - DebitAmount) > 0 THEN $0
                             ELSE SUM(OpenningDebitAmount
                                          - OpenningCreditAmount + DebitAmount
                                 - CreditAmount)
                        END
                   END)                                         AS CloseDebitAmount,      -- Dư nợ cuối kỳ quy đổi
               (CASE
                    WHEN AccountCategoryKind = 1
                        THEN SUM(OpenningCreditAmount - OpenningDebitAmount
                                     + CreditAmount - DebitAmount)
                    WHEN AccountCategoryKind = 0 THEN $0
                    ELSE CASE
                             WHEN (SUM(OpenningCreditAmount
                                           - OpenningDebitAmount
                                           + CreditAmount - DebitAmount)) > 0
                                 THEN SUM(OpenningCreditAmount
                                              - OpenningDebitAmount + CreditAmount
                                 - DebitAmount)
                             ELSE $0
                        END
                   END)                                         AS CloseCreditAmount,     -- Dư có cuối kỳ quy đổi
               AccountObjectGroupListCode,
               AccountObjectCategoryName
        FROM (SELECT AOL.AccountingObjectID,
                     LAOI.AccountObjectCode,                   -- Mã NCC
                     LAOI.AccountObjectName,                   -- Tên NCC lấy trên danh mục
                     LAOI.AccountObjectAddress,                -- Địa chỉ
                     LAOI.AccountObjectTaxCode,                -- Mã số thuế
--                             LAOI.MaximizeDebtAmount ,
                     TBAN.AccountNumber,                       -- TK công nợ
                     TBAN.AccountCategoryKind,                 -- Tính chất tài khoản
                     CASE
                         WHEN AOL.PostedDate < @FromDate
                             THEN AOL.DebitAmountOriginal
                         ELSE $0
                         END        AS OpenningDebitAmountOC,  -- Dư nợ Đầu kỳ
                     CASE
                         WHEN AOL.PostedDate < @FromDate
                             THEN AOL.DebitAmount
                         ELSE $0
                         END        AS OpenningDebitAmount,    -- Dư nợ Đầu kỳ quy đổi
                     CASE
                         WHEN AOL.PostedDate < @FromDate
                             THEN AOL.CreditAmountOriginal
                         ELSE $0
                         END        AS OpenningCreditAmountOC, -- Dư có đầu kỳ
                     CASE
                         WHEN AOL.PostedDate < @FromDate
                             THEN AOL.CreditAmount
                         ELSE $0
                         END        AS OpenningCreditAmount,   -- Dư có đầu kỳ quy đổi
                     CASE
                         WHEN AOL.PostedDate < @FromDate THEN $0
                         ELSE AOL.DebitAmountOriginal
                         END        AS DebitAmountOC,          -- Phát sinh nợ
                     CASE
                         WHEN AOL.PostedDate < @FromDate THEN $0
                         ELSE AOL.DebitAmount
                         END        AS DebitAmount,            -- Phát sinh nợ quy đổi
                     CASE
                         WHEN AOL.PostedDate < @FromDate THEN $0
                         ELSE AOL.CreditAmountOriginal
                         END        AS CreditAmountOC,         -- Phát sinh có
                     CASE
                         WHEN AOL.PostedDate < @FromDate THEN $0
                         ELSE AOL.CreditAmount
                         END        AS CreditAmount,
                     CASE
                         WHEN PostedDate BETWEEN @FromDate AND @ToDate THEN AOL.DebitAmountOriginal
                         ELSE 0 END AS AccumDebitAmountOC,
                     CASE
                         WHEN PostedDate BETWEEN @FromDate AND @ToDate THEN AOL.DebitAmount
                         ELSE 0 END AS AccumDebitAmount,
                     CASE
                         WHEN PostedDate BETWEEN @FromDate AND @ToDate THEN AOL.CreditAmountOriginal
                         ELSE 0 END AS AccumCreditAmountOC,
                     CASE
                         WHEN PostedDate BETWEEN @FromDate AND @ToDate THEN AOL.CreditAmount
                         ELSE 0 END AS AccumCreditAmount,
                     LAOI.AccountObjectGroupListCode,
                     LAOI.AccountObjectCategoryName
              FROM dbo.GeneralLedger AS AOL
                       JOIN @tblAccountNumber TBAN ON AOL.Account = TBAN.AccountNumber
                       JOIN dbo.AccountList AS AN ON AOL.Account = AN.AccountNumber and AN.CompanyID in
                                                                                        (select id from Func_getCompany(@CompanyID, @isDependent))
                       JOIN @tblListAccountObjectID AS LAOI ON AOL.AccountingObjectID = LAOI.AccountObjectID
--                        JOIN dbo.Unit AS UN ON AOL.UnitID = UN.id and UN.CompanyID in (select id from Func_getCompany (@CompanyID, @isDependent))-- Danh mục ĐVT
              WHERE AOL.PostedDate <= @ToDate
                and AOL.CompanyID in (select id from Func_getCompany(@CompanyID, @isDependent))
                and TypeLedger in (@CurrentBook, 2)
--                             AND AOL.IsPostToManagementBook = @IsWorkingWithManagementBook
                AND (@CurrencyID IS NULL
                  OR AOL.CurrencyID = @CurrencyID
                  )
--             AND AN.DetailByAccountObject = 1
--                 AND AN.AccountingType = 0
             ) AS RSNS
        GROUP BY RSNS.AccountingObjectID,
                 RSNS.AccountObjectCode,    -- Mã NCC
                 RSNS.AccountObjectName,    -- Tên NCC
                 RSNS.AccountObjectAddress, -- Địa chỉ
                 RSNS.AccountObjectTaxCode, -- Mã số thuế
                 RSNS.AccountNumber,        -- Số tài khoản
                 RSNS.AccountCategoryKind,  -- Tính chất tài khoản
                 RSNS.AccountObjectGroupListCode,
                 RSNS.AccountObjectCategoryName
--                 ,RSNS.MaximizeDebtAmount
        HAVING SUM(DebitAmountOC) <> 0
            OR SUM(DebitAmount) <> 0
            OR SUM(CreditAmountOC) <> 0
            OR SUM(CreditAmount) <> 0
            OR SUM(OpenningDebitAmount - OpenningCreditAmount) <> 0
            OR SUM(OpenningDebitAmountOC - OpenningCreditAmountOC) <> 0
            AND
               (SUM(AccumDebitAmountOC) <> 0
                   OR SUM(AccumDebitAmount) <> 0
                   OR SUM(AccumCreditAmountOC) <> 0
                   OR SUM(AccumCreditAmount) <> 0)
        ORDER BY RSNS.AccountObjectCode -- Mã NCC
        OPTION (RECOMPILE)

        --                 and TypeLedger in (@CurrentBook, 2)
--                             AND AOL.IsPostToManagementBook = @IsWorkingWithManagementBook
    END
go

